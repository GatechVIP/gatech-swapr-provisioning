map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 8080;
    server_name swapr-dev.vip.gatech.edu;
    rewrite ^ https://$server_name$request_uri? permanent;
}

server {
    listen 8443 ssl default;

    server_name swapr-dev.vip.gatech.edu;
    
    root /usr/share/nginx/html;

    ssl_certificate /etc/nginx/ssl/ssl.dev.cert;
    ssl_certificate_key /etc/nginx/ssl/ssl.dev.key;

    # Secure SSL settings
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location / {
        proxy_pass http://client-watcher;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location /api {
        proxy_pass http://node-app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location /login {
        proxy_pass http://node-app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }

    location /dist {
        alias /client_dist;
        index index.html;
    }
}

# Websocket server on original port from client-watch container
server {
    listen 1235 ssl default;

    server_name swapr-dev.vip.gatech.edu;

    ssl_certificate /etc/nginx/ssl/ssl.dev.cert;
    ssl_certificate_key /etc/nginx/ssl/ssl.dev.key;

    # Secure SSL settings
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location / {
        proxy_pass http://client-watcher-ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
}

upstream node-app {
      server backend:8001 weight=10 max_fails=3 fail_timeout=30s;
}

upstream client-watcher {
      server client-watch:1234 weight=10 max_fails=3 fail_timeout=30s;
}

upstream client-watcher-ws {
      server client-watch:1235 weight=10 max_fails=3 fail_timeout=30s;
}